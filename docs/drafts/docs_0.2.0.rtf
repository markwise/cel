{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red163\green217\blue121;}
\margl1440\margr1440\vieww16960\viewh17520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
0.2.0 docs\
\
This project is actively being developed and is subject to change based on work toward the 1.0.0 release.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
Cel
\b0\fs24 \
\
\
\
\
Cel is a CSS framework that does not rely on pixel perfection to create multi-column layouts. \
\
It is designed from the ground up to be naturally responsive.\
\
Column widths and gaps are defined using percentages, so they are flexible and scale with any screen size on any device.\
\
\
graceful fallback for unsupported features\
\
\
Cel uses a hybrid inline-block / flexbox implementation.\
\
Browser support includes:\
\
Safari 3.1+ (flexbox)\
Firefox 12 - 21 (inline-block)\
Firefox 22+ (flexbox)\
Internet Explorer 8 - 9 (inline-block)\
Internet Explorer 10+ (flexbox)\
Chrome 4+ (flexbox)\
Opera 12.1+ (flexbox)\
iOS 3.2 (flexbox)\
Android 2.1+ (flexbox)\
\
\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \ul \ulc0 Download the 0.2.0 release\ulnone \
\
\ul View the 0.2.0 release\ulnone \
\
\ul View the 0.2.0 docs\ulnone \
\
\ul Changelog\ulnone \
\
\ul Todo's\ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
\
Browser support\
\
\
\
About
\b0\fs24 \
\
\
There are many CSS frameworks currently available and most of them seem to be copies of each other. They are geared towards designers and are based on 12 and 16 column grids. They are also accompanied by a downloadable photoshop file.\
\
\
Cel is designed to be simple, powerful and designed with the front-end developers in mind since that is who will be using it.\
\
\
\
\
I personally find this approach a bit too rigid and not developer friendly especially for responsive needs.\
\
\
\
\
\
\
\
I personally find the class names either to long or to cryptic.\
\
\
\
\
\
\
Cel is designed to be simple, powerful and designed with the front-end developers in mind since that is who will be using it.\
\
There is no photoshop file to download\
\
\
It is designed from the ground up to be responsive and \
\
\
\
\
\
\
\
\
There are many differences between cels approach and other CSS frameworks.\
\
Outside of the class cel that is applied to columns all controlling classes are applied to the parent element. \
\
\
\
\
\
\
\
If you would like to become a cel contributor, please read the \ul project guidelines\ulnone .\
\
\
\
\
\
\

\b\fs48 License
\b0\fs24 \
\
Cel is owned and maintained by Mark Wise. It is released under the MIT License.\
\
\
\
\
\
\
\
\
\
------------------------------------------------------------------\
\
\
cel/about\
motivation\
license\
\
nickel tour\
\
cel\
classes\
layouts\
split\
cel\
by\
with-gap\
and-line\
align\
flip\
\
------\
\
cel\
motivation\
license\
layout\
classes\
\
\
\
\
\
\
\
\
\
\
\
\

\b\fs48 Cel
\b0\fs24 \
\
copy of this section from README\
\
\
\
\

\b\fs48 \
\
Classes
\b0\fs24 \
\
There are five classes, two core class and three helper classes. Skip ahead to learn more or take the nickel tour below.\
\
split\
cel\
by\
with-gap\
and-line\
align\
flip\
\

\b\fs48 \
\
Layouts
\b0\fs24 \
\
Cel can be used to create layouts in two different contexts, authored and structured. \
\
\
Authored layouts use a subset of cel helper classes and allow the author to define column widths and gap sizes.\
\
This context provides the most flexibility and allows the author to work outside the cel framework.\
\
\
With structured layouts, column widths, gap sizes and other layout characteristics are controlled entirely by cel helper classes.\
\
Since helper classes are the strength in the cel framework, it is always recommended to define layouts before authoring your own.\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Authored layouts
\b0 \
\
\
The classes \cb2 split\cb1  and \cb2 cel\cb1  are the only required classes in the cel framework. \
\
Cel is added to columns and split is added to the columns' parent.\
\
The class split by itself creates a generic (authored) layout that can be modified by the author (you).\
\
Column widths and gaps can safely be defined without affecting the core framework.\
\
The only helper classes available in this context are align and flip.\
\
\
\
To create an authored layout, add the class \cb2 cel\cb1  to columns and the class \cb2 split\cb1  to the columns' parent.\
\
<div class="split">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
\
\
The default horizontal alignment of an authored layout distributes columns evenly across their parent. \
\
The first and last columns will be flush with the left and right edges of their parent, and all columns in between are spread evenly across the remaining space.\
\
This is the same behavior exhibited when styling a paragraph with text-align:justify.\
\
The alignment of columns can be altered using the align helper class\
\
To left align columns, add the class align:h to a split element\
\
<div class="split align:h">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
Columns can also be vertically aligned\
\
To bottom align columns, add the class align:vvv to a split element\
\
<div class="split align:vvv">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
They can also be used together\
\
\
\
\
\
See the section about align for more details.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
reverse direction\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
A layout can be reversed using the helper class flip.\
\
\
\
\
\
More info on align and flip can be found\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\

\b Structured layouts
\b0 \
\
Structured layouts are created by adding the helper class 'by' to a split element to define a layout.\
\
\
\
\
\
\
\
\
\
\
\
Structured layouts allow you to define equal columns or layouts based on a ratio.\
\
\
\
\
It is most likely that you will use a structured layout approach \
\
\
\
\
\
align:v\
by:\
with-gap:\
and-line \
flip\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
\
\
\
split, cel\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 \
The classes \cb2 split\cb1  and \cb2 cel\cb1  are the only required classes in the cel library. The class cel is added to columns and split is added to the columns' parent.\
\
\
The cel framework can be used to create layouts in two ways, authored and structured. \
\
\
Authored layouts use a subset of cel helper classes and allow the author to define column widths and gap sizes.\
\
This context provides the most flexibility and allows the author to work outside the cel framework.\
\
\
With structured layouts, column widths, gap sizes and other layout characteristics are controlled entirely by cel helper classes.\
\
Since helper classes are the strength in the cel framework, it is always recommended to define layouts before authoring your own.\
\
\
\
\
Split by itself creates a generic layout that can be used with helper classes to further refine a layout.\
\
\
\
\
default horizontal alignment\
\
\
default vertical alignment\
\
\
describe default characteristics\
\
\
\
\
\
\
\
\
\
\
\
\
\
To create a split element add the class \cb2 cel\cb1  to columns and the class \cb2 split\cb1  to the columns' parent.\
\
<div class="split">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs28 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 Nesting
\fs28 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 A split element's structure can be nested to create complex layouts as shown below.\
\
<div class="split">\
	<div class="cel">\
		<div class="split">\
			<div class="cel">A1</div>\
			<div class="cel">A2</div>\
		</div>\
	</div>\
	<div class="cel"></div>\
</div>\
\
Columns, however, cannot be split elements.\
\
not\
\
<div class="split">\
	<div class="cel split">\
		<div class="cel">A1</div>\
		<div class="cel">A2</div>\
	</div>\
	<div class="cel">B</div>\
</div>\
\
or\
\
<div class="split">\
	<div class="split">\
		<div class="cel">A1</div>\
		<div class="cel">A2</div>\
	</div>\
	<div class="cel">B</div>\
</div>\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 by:
\b0\fs24 \
\
The class \cb2 by\cb1  is used to define a structured layout.\
\
Widths, gaps and other layout characteristics are controlled entirely by cel helper classes.\
\
If using by to define a layout, you should never override widths\
\
\
\
\
\
\
\
This class has no default value and requires an argument expressed as an integer or a fraction. \
\
If the argument is an integer, column widths will be split evenly by that value. \
\
If the argument is a fraction, column widths will be split by a ratio based on that value.\
\
\
\
\
\
\
Split supports up to five equal width columns and six ratios that affect two column layouts.\
\
If the argument is an integer:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 by:2
\b0 	 two equal width columns\

\b by:3
\b0 	three equal width columns\

\b by:4
\b0 	four equal width columns\

\b by:5
\b0 	five equal width columns\
\
If the argument is a fraction:\
\

\b by:1/2
\b0 	  column two is 2x the size of column one\

\b by:2/1
\b0 	  column one is 2x the size of column two\

\b by:1/3
\b0    column two is 3x the size of column one\

\b by:3/1
\b0    column one is 3x the size of column two\

\b by:2/3
\b0    column two is 1/3 wider than column one\

\b by:3/2
\b0    column one is 1/3 wider than column two\
\
The following split element defines a layout with three equal width columns.\
\
<div class="split by:3">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
The following split element defines a layout by a ratio of 2 to 1. Column A is 2x the width of column B.\
\
<div class="split by:2/1">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\
The following split element defines a layout by a ratio of 2 to 3. Column B is 1/3 wider than column A.\
\
<div class="split by:2/3">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
\
with-gap:
\b0\fs24 \
\
The class \cb2 with-gap\cb1  adds horizontal space between columns.\
\
This class has no default value and requires an integer as an argument.\
\
The integer represents a percentage of the split element's width and supports gap sizes up to 5%.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 with-gap:1
\b0 	1% gap\

\b with-gap:2
\b0 	2% gap\

\b with-gap:3
\b0 	3% gap\

\b with-gap:4
\b0 	4% gap\

\b with-gap:5
\b0 	5% gap\
\
\
To add a 1% gap between columns, pass the value 1 as an argument to the class.\
\
<div class="split with-gap:1">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 To add a 2% gap between columns, pass the value 2 as an argument to the class.\
\
<div class="split with-gap:2">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\
To add a 3% gap between columns, pass the value 3 as an argument to the class.\
\
<div class="split with-gap:3">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
</div>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
\
align:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 \
The class \cb2 align\cb1  can be used to change the horizontal and vertical alignment of columns (cels). The default horizontal alignment is justify, which distributes columns evenly across their parent. The default vertical alignment is stretch (equal heights) for browsers that use a flexbox implementation, otherwise the default is top.\
\
Align accepts a string as an argument to the class. If the value is one or more h's, alignment will be horizontal. If the value is one or more v's alignment will be vertical. The number of h's or v's corresponds to the alignment position.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 align:h
\b0 	left \

\b align:hh
\b0 	center\

\b align:hhh
\b0 	right\
\

\b align:v
\b0 	top\

\b align:vv
\b0 	middle\

\b align:vvv
\b0 	bottom\
\
\

\b Horizontal alignment
\b0 \
\
To align columns left, add the class \cb2 align:h\cb1  to a split element.\
\
<div class="split align:h">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
To align columns center, add the class \cb2 align:hh\cb1  to a split element.\
\
<div class="split align:hh">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
To align columns right, add the class \cb2 align:hhh\cb1  to a split element.\
\
<div class="split align:hhh">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
It's important to note that layouts defined with the class 'by' cannot be aligned horizontally because they are designed to span the width of their parent.\
\
\

\b Vertical alignment
\b0 \
\
To align columns top, add the class \cb2 align:v\cb1  to a split element.\
\
<div class="split align:v">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
To align columns middle, add the class \cb2 align:vv\cb1  to a split element.\
\
<div class="split align:vv">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
To align columns bottom, add the class \cb2 align:vvv\cb1  to a split element.\
\
<div class="split align:vvv">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
</div>\
\
\
These classes can be used together to affect both horizontal and vertical alignment\
\
example\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 \
\
flip
\b0\fs24 \
\
The class \cb2 flip\cb1  reverses the column order in the rendered page.\
\
When the page is rendered, the columns will be ordered from left to right D, C, B, A.\
\
<div class="split flip">\
	<div class="cel">A</div>\
	<div class="cel">B</div>\
	<div class="cel">C</div>\
	<div class="cel">D</div>\
</div>\
\
\
\
\
\
\
\
\
\
\
\
}